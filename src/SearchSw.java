
import DAO.ConnectionProvider;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author OPR
 */
public class SearchSw extends javax.swing.JFrame {
String loc;
    /**
     * Creates new form SearchSw
     */
    public SearchSw() {
        initComponents();
        if(Home.URole.equals("Admin")){
            
            btnUpd.setVisible(false);
            btnFinish.setVisible(false);
        }
    }
    
    public SearchSw(String res){
        initComponents();
        tableLoc.setEnabled(false);
        btnFinish.setVisible(false);
       
            labName.setVisible(false);
            
           
            txtEqName.setVisible(false);
            
            btnAdDev.setVisible(false);
            btnUpDev.setVisible(false);
        if(Home.URole.equals("Admin")){
            
            labName.setVisible(false);
            
            
            txtEqName.setVisible(false);
            
            btnAdDev.setVisible(false);
            btnUpDev.setVisible(false);
            btnUpd.setVisible(false);
        }
        try{
                
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select * from SwPkg");
                while(rs.next()){
                    String id=rs.getString("swID");
                    
                    if(id.equalsIgnoreCase(res)){
                        txtID.setText(rs.getString("swID")); txtID.setEditable(false);
                        txtName.setText(rs.getString("name")); txtName.setEditable(false);
                        txtSize.setText(rs.getString("size")); txtSize.setEditable(false);
                        txtUpd.setText(rs.getString("dateOfUpdation")); txtUpd.setEditable(false);
                        txtRev.setText("rev"); txtRev.setEditable(false);
                        
                    } 
                }
                DefaultTableModel model=(DefaultTableModel) tableLoc.getModel();
                rs=st.executeQuery("select * from SwPkg");
                ResultSet rs1=st.executeQuery("select * from equipment");
                
                int i=1;
                while(rs.next()){
                    if(rs.getString("swID").equals(txtID.getText())){
                        while(rs1.next())
                        {
                            if(rs1.getString("eqID").equals(rs.getString("loc"))||rs1.getString("eqName").equals(rs.getString("loc")))
                                model.addRow(new Object[]{i++,rs1.getString("eqID"),rs1.getString("eqName")});
                        }
                    }
                }
                con.close();
                rs.close();
                rs1.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtUpd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRev = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLoc = new javax.swing.JTable();
        labName = new javax.swing.JLabel();
        txtEqName = new javax.swing.JTextField();
        btnAdDev = new javax.swing.JButton();
        btnUpDev = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnUpd = new javax.swing.JButton();
        btnFinish = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setText("SOFTWARE PACKAGE DETAILS");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Software ID:");

        txtID.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Software Name:");

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Date of Updation:");

        txtUpd.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Size (in Bytes):");

        txtSize.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Revision No:");

        txtRev.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Location in devices:");

        tableLoc.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tableLoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SN", " Name"
            }
        ));
        tableLoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLoc);

        labName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labName.setText("Location Name");

        txtEqName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtEqName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEqNameActionPerformed(evt);
            }
        });

        btnAdDev.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAdDev.setText("ADD device");
        btnAdDev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdDevActionPerformed(evt);
            }
        });

        btnUpDev.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnUpDev.setText("UPDATE device");
        btnUpDev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpDevActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpd.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnUpd.setText("UPDATE");
        btnUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdActionPerformed(evt);
            }
        });

        btnFinish.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnFinish.setText("FINISH");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(239, 239, 239))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdDev)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpDev)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtName))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel6)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUpd)
                                    .addComponent(txtSize)
                                    .addComponent(txtRev, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFinish)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpd))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(labName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEqName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(30, 30, 30))))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUpd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtRev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labName)
                    .addComponent(txtEqName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdDev)
                    .addComponent(btnUpDev))
                .addGap(25, 25, 25)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnUpd)
                    .addComponent(btnFinish))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdActionPerformed

    private void txtEqNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEqNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEqNameActionPerformed

    private void btnAdDevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdDevActionPerformed
        String name=txtEqName.getText();
   
        
        if(name.equals("")||name.equals("")){
            JOptionPane.showMessageDialog(null,"Both fields are required!");
        }
        else{
            try{
                Connection con=ConnectionProvider.getCon();
                PreparedStatement ps=con.prepareStatement("insert into SwPkg(swID,name, size,dateOfUpdation,loc,revNo)values(?,?,?,?,?,?)");
                ps.setString(1,txtID.getText());
                ps.setString(2,txtName.getText());
                ps.setString(3,txtSize.getText());
                ps.setString(4,txtUpd.getText());
                ps.setString(5,name);
                ps.setString(6,txtRev.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"Device added successfully!");
                con.close();
                ps.close();
                setVisible(false);
                new SearchSw(txtID.getText()).setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnAdDevActionPerformed

    private void btnUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdActionPerformed
        JOptionPane.showMessageDialog(null,"The fields are editable now!");
        tableLoc.setEnabled(true);
       
            labName.setVisible(true);
            
            
            txtEqName.setVisible(true);
            
            btnAdDev.setVisible(true);
            btnAdDev.setEnabled(true);
            btnUpDev.setVisible(true);
            btnUpDev.setEnabled(false);
        
        txtName.setEditable(true);
        txtSize.setEditable(true);
        txtUpd.setEditable(true);
        txtRev.setEditable(true);
        btnUpd.setVisible(false);
        btnFinish.setVisible(true);
    }//GEN-LAST:event_btnUpdActionPerformed

    private void btnUpDevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpDevActionPerformed
        String name=txtEqName.getText();
       
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(null,"Field is required!");
        }
        else{
            try{
                Connection con=ConnectionProvider.getCon();
                PreparedStatement ps=con.prepareStatement("update SwPkg set(loc=? where loc=?)");
                ps.setString(1,name);
                ps.setString(2,loc);
                
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"Device updated successfully!");
                setVisible(false);
                new SearchSw(txtID.getText()).setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnUpDevActionPerformed

    private void tableLocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLocMouseClicked
        int index=tableLoc.getSelectedRow();
        TableModel model= tableLoc.getModel();
        String id=model.getValueAt(index,1).toString();
        
        
        loc=id;
       
        txtEqName.setText(id);
       
        btnAdDev.setEnabled(false);
        btnUpDev.setEnabled(true);
    }//GEN-LAST:event_tableLocMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        setVisible(false);
        new SwPkg().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        String name=txtName.getText();
        String id=txtID.getText();
        String size=txtSize.getText();
        String dou=txtUpd.getText();
        String rev=txtRev.getText();
        if((name.equals("")||id.equals("")||size.equals("")||dou.equals("")||rev.equals(""))){
            JOptionPane.showMessageDialog(null,"All fields are required!!!");
        }
        else{
            try{
                Connection con=ConnectionProvider.getCon();
                PreparedStatement ps=con.prepareStatement("update SwPkg set name=?,size=?,dateOfUpdation=?,revNo=? where swID=?");
                ps.setString(1,name);
                ps.setString(2,size);
                ps.setString(3,dou);
                ps.setString(4,rev);
                ps.setString(5,id);
                
                ps.executeUpdate();
                con.close();
                ps.close();
                JOptionPane.showMessageDialog(null,"Software updated successfully!");
                setVisible(false);
                new ManageUser().setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        
        setVisible(false);
        new SwPkg().setVisible(true);
    }//GEN-LAST:event_btnFinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchSw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchSw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchSw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchSw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchSw().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdDev;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnUpDev;
    private javax.swing.JButton btnUpd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labName;
    private javax.swing.JTable tableLoc;
    private javax.swing.JTextField txtEqName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRev;
    private javax.swing.JTextField txtSize;
    private javax.swing.JTextField txtUpd;
    // End of variables declaration//GEN-END:variables
}
